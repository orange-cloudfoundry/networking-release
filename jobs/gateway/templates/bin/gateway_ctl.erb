#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
mkdir -p /var/vcap/sys/{log,run}/gateway
mkdir -p /var/vcap/sys/data/gateway
exec 1>> /var/vcap/sys/log/gateway/gateway.out.log
exec 2>> /var/vcap/sys/log/gateway/gateway.err.log

GW_LIST_FILE=/var/vcap/sys/data/gateway/gw.list
touch ${GW_LIST_FILE}

function lookup_hostname
{
    if [[ ${1} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        echo ${1}
    else
        ip=$(dig +short ${1})
        if [ -n "${ip}" ]; then
            echo ${ip}
        fi
    fi
}

function list_default_gateway
{
  echo "****** $(date) default gateways"
  set +e
  /sbin/ip route show | grep default
  set -e
}

function has_default_gateway
{
  /sbin/ip route show | grep -q "default via $1"
}

function extract_gateway_from_default_route
{
  echo "$1" | sed -r 's/default via ([0-9.]+).*/\1/g'
}

function save_initial_gateways
{
  echo "****** $(date) saving initial gateways"
  set +e
  /sbin/ip route show | grep default > ${GW_LIST_FILE}
  set -e
}

function remove_initial_gateways
{
  echo "****** $(date) removing initial gateways"
  while read -r c_line; do
    local gw=$(extract_gateway_from_default_route "${c_line}")
    echo "****** $(date) removing default gateway ${gw}"
    /sbin/route del default gw ${gw} || {
      echo "error: unable to remove default gateway ${gw}"
      return 1
    }
  done < ${GW_LIST_FILE}
}

function restore_initial_gateways
{
  echo "****** $(date) restoring initial gateways"
  while read -r c_line; do
    local gw=$(extract_gateway_from_default_route "${c_line}")
    has_default_gateway "${gw}" || {
      echo "****** $(date) add default gateway ${gw}"
      /sbin/route add default gw ${gw} || {
        echo "error: unable to restore default gateway ${gw}"
        return 1
      }
    }
  done < ${GW_LIST_FILE}
}

function set_default_gateway
{
  local host=$1; shift
  local gw=$(lookup_hostname ${host})

  if [ -z "${gw}" ]; then
      echo "error: could not resolve hostname ${host}"
      return 1
  fi

  has_default_gateway "${gw}" || {
    save_initial_gateways
    echo "****** $(date) add default gateway ${gw}"
    /sbin/route add default gw ${gw} || {
      echo "error: unable to add default gateway ${host}"
      return 1
    }
    sleep 1
    remove_initial_gateways
  }
}

function remove_default_gateway
{
  local host=$1; shift
  local gw=$(lookup_hostname ${host})

  if [ -z "${gw}" ]; then
      echo "error: could not resolve hostname ${host}"
      return 1
  fi

  restore_initial_gateways
  sleep 1
  echo "****** $(date) removing default gateway ${gw}"
  /sbin/route del default gw ${gw} || {
    echo "error: unable to remove default gateway ${host}"
    return 1
  }
}

function  main
{
  case $1 in
    start)
      echo "****** $(date) ${0} start"
      # Set default gateway
      list_default_gateway
      set_default_gateway "<%= p('networking.gateway.default') %>"
      list_default_gateway
      # Create check file
      touch /var/vcap/sys/run/gateway/gateway.check
      ;;

    stop)
      echo "****** $(date) ${0} stop"
      # restore default gateway
      list_default_gateway
      remove_default_gateway "<%= p('networking.gateway.default') %>"
      list_default_gateway
      # Remove check file
      rm /var/vcap/sys/run/gateway/gateway.check
      ;;

    status)
      echo "****** $(date) ${0} status"
      # List default gateway
      list_default_gateway
      ;;

    *)
      echo "Usage: $0 {start|stop|status}"
      exit 1
      ;;

  esac
  exit 0
}

main $1
